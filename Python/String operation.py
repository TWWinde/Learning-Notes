

#########################################end='\r'#######################################
"""使用 end='\r' 来实现动态文本更新，用于指定在打印内容后应该使用什么字符来结束行。默认情况下，print()函数使用换行符\n来结束行，
从而在打印内容后将光标移动到下一行。当end='\r'时，print()函数将使用回车符\r来结束行，这会将光标移动到当前行的开头，
从而实现覆盖当前行的效果。常用于简单模型在训练中打印损失"""
import time

for i in range(10):
    print(f"Progress: {i}/9", end='\r')
    time.sleep(1)  # 模拟一些耗时的操作

print("Done")


'''
* 		整数格式化：
    * d：十进制整数
    * x：十六进制整数（小写字母）
    * X：十六进制整数（大写字母）
    * o：八进制整数
    * b：二进制整数
* 		浮点数格式化：
    * f：定点数表示
    * e：指数表示（小写 'e'）
    * E：指数表示（大写 'E'）
    * g：通用格式（如果指数小于-4或大于等于精度，则使用定点表示，否则使用指数表示）
    * G：通用格式（类似于 'g'，但使用大写 'E' 表示指数部分）
* 		字符串格式化：
    * s：字符串
* 		宽度和精度：
    * {:width}：设置字段的最小宽度（例如，{:10} 设置最小宽度为10个字符）
    * {:width.precision}：设置字段的最小宽度和精度（例如，{:10.2} 设置最小宽度为10个字符，小数点后保留2位）
* 		对齐：
    * <：左对齐值在字段内
    * >：右对齐值在字段内
    * ^：居中值在字段内
    '''